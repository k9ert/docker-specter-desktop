name: Automated release of new Specter versions

on:
  workflow_dispatch:
      inputs:
        tag:
          description: 'The tag to build'
          required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Get latest tag
        run: |
               echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
               echo "Latest specter is ${{ env.TAG }}"

      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ env.TAG }}
          message: "Latest specter release (automated tag)"

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin


      - name: Setup Docker buildx action
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
              buildx-version: latest
              qemu-version: latest

      - name: Show available Docker buildx platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Run Docker buildx against the tag (specter-desktop)
        run: |
                docker buildx build \
                --cache-from "type=local,src=/tmp/.buildx-cache" \
                --cache-to "type=local,dest=/tmp/.buildx-cache" \
                --build-arg VERSION=${{ env.TAG }} \
                --platform linux/amd64,linux/arm64 \
                --tag ${{ secrets.DOCKER_HUB_USER }}/specter-desktop:${{ env.TAG }} \
                --output "type=registry" .

      - name: Push to GHCR.io too (ghcr.io/lncm/docker-specter-desktop:TAG)
        run: |
                if [[ ! -z ${{ secrets.MAINTAINER_TOKEN }} ]] && [[ ! -z ${{ secrets.MAINTAINER_USER }} ]]; then
                    echo "${{ secrets.MAINTAINER_TOKEN }}" | docker login https://ghcr.io -u "${{ secrets.MAINTAINER_USER }}" --password-stdin
                    echo "Pushing to ghcr.io/lncm/docker-specter-desktop/${{ env.TAG }} ..."
                    docker buildx build \
                      --cache-from "type=local,src=/tmp/.buildx-cache" \
                      --cache-to "type=local,dest=/tmp/.buildx-cache" \
                      --platform linux/amd64,linux/arm64 \
                      --build-arg VERSION=${{ env.TAG }} \
                      --tag ghcr.io/lncm/docker-specter-desktop:${{ env.TAG }} \
                      --output "type=registry" .
                    echo "Pushing to ghcr.io/lncm/docker-specter-desktop:latest ..."
                    docker buildx build \
                      --cache-from "type=local,src=/tmp/.buildx-cache" \
                      --cache-to "type=local,dest=/tmp/.buildx-cache" \
                      --build-arg VERSION=${{ env.TAG }} \
                      --platform linux/amd64,linux/arm64 \
                      --tag ghcr.io/lncm/docker-specter-desktop:latest \
                      --output "type=registry" .
                else
                    echo "MAINTAINER_TOKEN and MAINTAINER_USER do no exist! Skipping!"
                fi
